ext {

    libraries = [
            /*jetbrains*/
            kotlin                  : "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            kotlinReflect           : "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            coroutinesCore          : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version",
            coroutinesAndroid       : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version",

            /*androidx*/
            kotlinKtx               : "androidx.core:core-ktx:$kotlin_ktx_version",
            androidx                : "androidx.appcompat:appcompat:$androidx_version",
            androidAnnotations      : "androidx.annotation:annotation:$androidx_version",
            kotlinLifecycle         : "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version",
            kotlinViewModel         : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",
            lifecycleExtensions     : "androidx.lifecycle:lifecycle-extensions:$lifecycle_version",
            liveData                : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",

            cardView                : "androidx.cardview:cardview:$card_view_version",
            constraintLayout        : "androidx.constraintlayout:constraintlayout:$constraint_layout_version",
            recyclerView            : "androidx.recyclerview:recyclerview:$recycler_view_version",

            room                    : "androidx.room:room-runtime:$room_version",
            roomCoroutines          : "androidx.room:room-ktx:$room_version", //Kotlin Extensions and Coroutines support for Room

            pagination              : "androidx.paging:paging-runtime-ktx:$pagination_version",
            work_manager            : "androidx.work:work-runtime-ktx:$work_manager_version",
            biometric               : "androidx.biometric:biometric:$biometric_version",

            /*dagger*/
            dagger                  : "com.google.dagger:dagger:$dagger_version",
            daggerAndroid           : "com.google.dagger:dagger-android:$dagger_version",
            daggerAndroidSupport    : "com.google.dagger:dagger-android-support:$dagger_version",

            /*google*/
            materialComponent       : "com.google.android.material:material:$material_component_version",
            googleGsm               : "com.google.android.gms:play-services-location:$google_gsm_version",
            google_maps             : "com.google.android.gms:play-services-maps:$maps_version",

            /*network*/
            retrofit                : "com.squareup.retrofit2:converter-gson:$retrofit_version",
            okhttpLoggingInterceptor: "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_interceptor_version",

            /*third party*/
            guava                   : "com.google.guava:guava:$guava_version",
            glide                   : "com.github.bumptech.glide:glide:$glide_version",
            lottie                  : "com.airbnb.android:lottie:$lottie_version",
            stetho                  : "com.facebook.stetho:stetho:$stetho_version",
            expandableRecycelerView : "com.thoughtbot:expandablerecyclerview:$expandable_recycler_view_version",
            cameraView              : "com.otaliastudios:cameraview:$camera_view_version",
            shimmer                 : "com.facebook.shimmer:shimmer:$shimmer_version",
            tooltip                 : "it.sephiroth.android.library.targettooltip:target-tooltip-library:$tooltip_version",
            datePicker              : "com.andrewjapar.rangedatepicker:rangedatepicker:$date_picker_version"
    ]

    compileTime = [
            /*javax*/
            javaxAnnotation  : "javax.annotation:jsr250-api:$javax_annotations_version",
            javaxInject      : "javax.inject:javax.inject:$javax_inject_version",

            daggerCompiler   : "com.google.dagger:dagger-compiler:$dagger_version",
            daggerAnnotation : "com.google.dagger:dagger-android-processor:$dagger_version",
            lifecycleCompiler: "androidx.lifecycle:lifecycle-compiler:$lifecycle_compiler_version",
            roomComipler     : "androidx.room:room-compiler:$room_version",
    ]

    unitTesting = [
            junit          : "junit:junit:$junit_version",

            kotlin         : "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            kotlinTest     : "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",

            mockito        : "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_version",
            mockitoInline  : "org.mockito:mockito-inline:$mockito_inline_version",
            mockK          : "io.mockk:mockk:$mockk_version",

            robolectric    : "org.robolectric:robolectric:$robolectric_version",
            kluent         : "org.amshove.kluent:kluent:$kluent_version",

            room           : "androidx.room:room-testing:$room_version",
            coroutines     : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version",

            testRunner     : "androidx.test:runner:${testRunner}",
            testRules      : "androidx.test:rules:${test_rules}",
            espressoCore   : "androidx.test.espresso:espresso-core:${espressoCore}",
            espressContents: "androidx.test.espresso:espresso-intents:${espressContents}",
            testExtensions : "androidx.test.ext:junit:${test_extensions}"
    ]

    acceptanceTesting = [
            testRunner        : "androidx.test.ext:junit:$runner_version",
            testRules         : "androidx.test:rules:$runner_version",
            androidAnnotations: "androidx.annotation:annotation:$androidx_version",
            mockKAndroid      : "io.mockk:mockk:$mockk_version",

            espressoCore      : "androidx.test.espresso:espresso-core:$espresso_version",
            espressoIntents   : "androidx.test.espresso:espresso-intents:$espresso_version",
            coroutines        : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    ]

    development = [
            leakCanary    : "com.squareup.leakcanary:leakcanary-android:$leak_canary_version",
            leakCanaryNoop: "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_noop_version",

            debugDb       : "com.amitshekhar.android:debug-db:$debug_db_version"
    ]
}